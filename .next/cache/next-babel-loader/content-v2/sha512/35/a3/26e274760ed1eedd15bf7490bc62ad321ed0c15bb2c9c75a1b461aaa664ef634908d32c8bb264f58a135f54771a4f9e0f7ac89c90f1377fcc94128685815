{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar fetcher = function fetcher(url) {\n  return fetch(url).then(function (res) {\n    return res.json();\n  });\n};\n\nvar baseUrl = \"http://localhost:3000/api/v1/auth\";\nexport var useLogin = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(path, usr, pass) {\n    var url, rawResponse, content;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (path) {\n              _context.next = 2;\n              break;\n            }\n\n            throw new Error(\"Path is required\");\n\n          case 2:\n            url = baseUrl + path;\n            _context.next = 5;\n            return fetch(url, {\n              method: 'POST',\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                username: usr,\n                password: pass,\n                type: 'OPERATOR'\n              })\n            });\n\n          case 5:\n            rawResponse = _context.sent;\n            _context.next = 8;\n            return rawResponse.json();\n\n          case 8:\n            content = _context.sent;\n            return _context.abrupt(\"return\", content);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function useLogin(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["D:/ReactJS/new-sioi/core/useLogin.ts"],"names":["fetcher","url","fetch","then","res","json","baseUrl","useLogin","path","usr","pass","Error","method","headers","body","JSON","stringify","username","password","type","rawResponse","content"],"mappings":";;;AAEA,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAAAC,GAAG;AAAA,SAAIC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgB,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,GAAnB,CAAJ;AAAA,CAAnB;;AACA,IAAMC,OAAO,GAAG,mCAAhB;AAEA,OAAO,IAAMC,QAAQ;AAAA,sEAAG,iBAAOC,IAAP,EAAaC,GAAb,EAAkBC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACfF,IADe;AAAA;AAAA;AAAA;;AAAA,kBAEV,IAAIG,KAAJ,CAAU,kBAAV,CAFU;;AAAA;AAIdV,YAAAA,GAJc,GAIRK,OAAO,GAAGE,IAJF;AAAA;AAAA,mBAKMN,KAAK,CAACD,GAAD,EAAM;AACjCW,cAAAA,MAAM,EAAE,MADyB;AAEjCC,cAAAA,OAAO,EAAE;AACT,0BAAU,kBADD;AAET,gCAAgB;AAFP,eAFwB;AAMjCC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,gBAAAA,QAAQ,EAAER,GAAX;AAAgBS,gBAAAA,QAAQ,EAAER,IAA1B;AAAgCS,gBAAAA,IAAI,EAAE;AAAtC,eAAf;AAN2B,aAAN,CALX;;AAAA;AAKdC,YAAAA,WALc;AAAA;AAAA,mBAaEA,WAAW,CAACf,IAAZ,EAbF;;AAAA;AAadgB,YAAAA,OAbc;AAAA,6CAcZA,OAdY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAARd,QAAQ;AAAA;AAAA;AAAA,GAAd","sourcesContent":["import useSWR from \"swr\"\n\nconst fetcher = url => fetch(url).then(res => res.json())\nconst baseUrl = \"http://localhost:3000/api/v1/auth\"\n\nexport const useLogin = async (path, usr, pass) => {\n    if (!path) {\n        throw new Error(\"Path is required\")\n    }\n    const url = baseUrl + path\n    const rawResponse = await fetch(url, {\n        method: 'POST',\n        headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n    },\n        body: JSON.stringify({username: usr, password: pass, type: 'OPERATOR'})\n    });\n    const content = await rawResponse.json();\n    return (content)\n}"]},"metadata":{},"sourceType":"module"}