{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar baseUrl = \"http://localhost:3000/api/v1/auth\";\nexport var useLogin = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(path, usr, pass) {\n    var url;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            url = baseUrl + path;\n            _context.next = 3;\n            return fetch(url, {\n              method: 'POST',\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              }\n            }).then(function (response) {\n              var jsarr = [\"hello\", \"world\"];\n              return jsarr;\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function useLogin(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["D:/ReactJS/new-sioi/core/useLogin.ts"],"names":["baseUrl","useLogin","path","usr","pass","url","fetch","method","headers","then","response","jsarr"],"mappings":";;AAAA,IAAMA,OAAO,GAAG,mCAAhB;AAEA,OAAO,IAAMC,QAAQ;AAAA,sEAAG,iBAAOC,IAAP,EAAaC,GAAb,EAAkBC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,YAAAA,GADc,GACRL,OAAO,GAAGE,IADF;AAAA;AAAA,mBAEdI,KAAK,CAACD,GAAD,EAAM;AACbE,cAAAA,MAAM,EAAE,MADK;AAEbC,cAAAA,OAAO,EAAE;AACT,0BAAU,kBADD;AAET,gCAAgB;AAFP;AAFI,aAAN,CAAL,CAMHC,IANG,CAME,UAAUC,QAAV,EAAoB;AACxB,kBAAMC,KAAK,GAAG,CAAC,OAAD,EAAU,OAAV,CAAd;AACA,qBAAQA,KAAR;AACH,aATK,CAFc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAARV,QAAQ;AAAA;AAAA;AAAA,GAAd","sourcesContent":["const baseUrl = \"http://localhost:3000/api/v1/auth\"\n\nexport const useLogin = async (path, usr, pass) => {\n    const url = baseUrl + path\n    await fetch(url, {\n        method: 'POST',\n        headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n        }\n    }).then(function (response) {\n        const jsarr = [\"hello\", \"world\"]\n        return (jsarr)\n    })\n}"]},"metadata":{},"sourceType":"module"}