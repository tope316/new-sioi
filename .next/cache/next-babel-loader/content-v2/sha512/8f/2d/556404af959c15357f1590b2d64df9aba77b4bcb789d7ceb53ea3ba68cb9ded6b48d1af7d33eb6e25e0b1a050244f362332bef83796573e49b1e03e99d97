{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"D:\\\\ReactJS\\\\new-sioi\\\\components\\\\misc\\\\currency.tsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from \"react\";\nimport { MenuItem } from \"@blueprintjs/core\";\n\n/** Currency List */\nexport var CURRENCIES = [{\n  currency_code: \"HKD\",\n  exchange_rate: 1.0000\n}, {\n  currency_code: \"USD\",\n  exchange_rate: 7.8446\n}, {\n  currency_code: \"JPY\",\n  exchange_rate: 0.0725\n}, {\n  currency_code: \"RMB\",\n  exchange_rate: 0.8813\n}, {\n  currency_code: \"EUR\",\n  exchange_rate: 10.5000\n}].map(_c = function _c(m, index) {\n  return _objectSpread(_objectSpread({}, m), {}, {\n    rank: index + 1\n  });\n});\n_c2 = CURRENCIES;\nexport var renderCurrency = function renderCurrency(currency, _ref) {\n  var handleClick = _ref.handleClick,\n      modifiers = _ref.modifiers,\n      query = _ref.query;\n\n  if (!modifiers.matchesPredicate) {\n    return null;\n  }\n\n  var text = \"\".concat(currency.currency_code);\n  return /*#__PURE__*/_jsxDEV(MenuItem, {\n    active: modifiers.active,\n    disabled: modifiers.disabled,\n    label: currency.exchange_rate.toString(),\n    onClick: handleClick,\n    text: highlightText(text, query)\n  }, currency.currency_code, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, _this);\n};\nexport var renderCreateCurrencyOption = function renderCreateCurrencyOption(query, active, handleClick) {\n  return /*#__PURE__*/_jsxDEV(MenuItem, {\n    icon: \"add\",\n    text: \"Create \\\"\".concat(query, \"\\\"\"),\n    active: active,\n    onClick: handleClick,\n    shouldDismissPopover: false\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, _this);\n};\nexport var filterCurrency = function filterCurrency(query, currency, _index, exactMatch) {\n  var normalizedTitle = currency.currency_code.toLowerCase();\n  var normalizedQuery = query.toLowerCase();\n\n  if (exactMatch) {\n    return normalizedTitle === normalizedQuery;\n  } else {\n    return \"\".concat(normalizedTitle, \" \").concat(currency.exchange_rate).indexOf(normalizedQuery) >= 0;\n  }\n};\n\nfunction highlightText(text, query) {\n  var lastIndex = 0;\n  var words = query.split(/\\s+/).filter(function (word) {\n    return word.length > 0;\n  }).map(escapeRegExpChars);\n\n  if (words.length === 0) {\n    return [text];\n  }\n\n  var regexp = new RegExp(words.join(\"|\"), \"gi\");\n  var tokens = [];\n\n  while (true) {\n    var match = regexp.exec(text);\n\n    if (!match) {\n      break;\n    }\n\n    var length = match[0].length;\n    var before = text.slice(lastIndex, regexp.lastIndex - length);\n\n    if (before.length > 0) {\n      tokens.push(before);\n    }\n\n    lastIndex = regexp.lastIndex;\n    tokens.push( /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: match[0]\n    }, lastIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }, this));\n  }\n\n  var rest = text.slice(lastIndex);\n\n  if (rest.length > 0) {\n    tokens.push(rest);\n  }\n\n  return tokens;\n}\n\nfunction escapeRegExpChars(text) {\n  return text.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\n}\n\nexport var currencySelectProps = {\n  itemPredicate: filterCurrency,\n  itemRenderer: renderCurrency,\n  items: CURRENCIES\n};\nexport function createCurrency(currency_code) {\n  return {\n    currency_code: currency_code,\n    exchange_rate: 1\n  };\n}\nexport function areCurrencyEqual(currencyA, currencyB) {\n  // Compare only the codes (ignoring case) just for simplicity.\n  return currencyA.currency_code.toLowerCase() === currencyB.currency_code.toLowerCase();\n}\nexport function doesCurrencyEqualQuery(currency, query) {\n  return currency.currency_code.toLowerCase() === query.toLowerCase();\n}\nexport function arrayContainsCurrency(currencies, currencyToFind) {\n  return currencies.some(function (currency) {\n    return currency.currency_code === currencyToFind.currency_code;\n  });\n}\nexport function addCurrencyToArray(currencies, currencyToAdd) {\n  return [].concat(_toConsumableArray(currencies), [currencyToAdd]);\n}\nexport function deleteCurrencyFromArray(currencies, currencyToDelete) {\n  return currencies.filter(function (currency) {\n    return currency !== currencyToDelete;\n  });\n}\nexport function maybeAddCreatedCurrencyToArrays(items, createdItems, currency) {\n  var isNewlyCreatedItem = !arrayContainsCurrency(items, currency);\n  return {\n    createdItems: isNewlyCreatedItem ? addCurrencyToArray(createdItems, currency) : createdItems,\n    // Add a created currency to `items` so that the currency can be deselected.\n    items: isNewlyCreatedItem ? addCurrencyToArray(items, currency) : items\n  };\n}\nexport function maybeDeleteCreatedCurrencyFromArrays(items, createdItems, currency) {\n  var wasItemCreatedByUser = arrayContainsCurrency(createdItems, currency); // Delete the item if the user manually created it.\n\n  return {\n    createdItems: wasItemCreatedByUser ? deleteCurrencyFromArray(createdItems, currency) : createdItems,\n    items: wasItemCreatedByUser ? deleteCurrencyFromArray(items, currency) : items\n  };\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CURRENCIES$[\\n    { currency_code: \\\"HKD\\\", exchange_rate: 1.0000 },\\n    { currency_code: \\\"USD\\\", exchange_rate: 7.8446 },\\n    { currency_code: \\\"JPY\\\", exchange_rate: 0.0725 },\\n    { currency_code: \\\"RMB\\\", exchange_rate: 0.8813 },\\n    { currency_code: \\\"EUR\\\", exchange_rate: 10.5000 },\\n].map\");\n$RefreshReg$(_c2, \"CURRENCIES\");","map":{"version":3,"sources":["D:/ReactJS/new-sioi/components/misc/currency.tsx"],"names":["React","MenuItem","CURRENCIES","currency_code","exchange_rate","map","m","index","rank","renderCurrency","currency","handleClick","modifiers","query","matchesPredicate","text","active","disabled","toString","highlightText","renderCreateCurrencyOption","filterCurrency","_index","exactMatch","normalizedTitle","toLowerCase","normalizedQuery","indexOf","lastIndex","words","split","filter","word","length","escapeRegExpChars","regexp","RegExp","join","tokens","match","exec","before","slice","push","rest","replace","currencySelectProps","itemPredicate","itemRenderer","items","createCurrency","areCurrencyEqual","currencyA","currencyB","doesCurrencyEqualQuery","arrayContainsCurrency","currencies","currencyToFind","some","addCurrencyToArray","currencyToAdd","deleteCurrencyFromArray","currencyToDelete","maybeAddCreatedCurrencyToArrays","createdItems","isNewlyCreatedItem","maybeDeleteCreatedCurrencyFromArrays","wasItemCreatedByUser"],"mappings":"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","sourcesContent":["import * as React from \"react\"\n\nimport { MenuItem } from \"@blueprintjs/core\"\nimport { ItemPredicate, ItemRenderer } from \"@blueprintjs/select\"\n\nexport interface ICurrency {\n    /** Currency Code. */\n    currency_code: string;\n    /** Rate. */\n    exchange_rate: number;\n}\n\n/** Currency List */\nexport const CURRENCIES: ICurrency[] = [\n    { currency_code: \"HKD\", exchange_rate: 1.0000 },\n    { currency_code: \"USD\", exchange_rate: 7.8446 },\n    { currency_code: \"JPY\", exchange_rate: 0.0725 },\n    { currency_code: \"RMB\", exchange_rate: 0.8813 },\n    { currency_code: \"EUR\", exchange_rate: 10.5000 },\n].map((m, index) => ({ ...m, rank: index + 1 }))\n\nexport const renderCurrency: ItemRenderer<ICurrency> = (currency, { handleClick, modifiers, query }) => {\n    if (!modifiers.matchesPredicate) {\n        return null;\n    }\n    const text = `${currency.currency_code}`;\n    return (\n        <MenuItem\n            active={modifiers.active}\n            disabled={modifiers.disabled}\n            label={currency.exchange_rate.toString()}\n            key={currency.currency_code}\n            onClick={handleClick}\n            text={highlightText(text, query)}\n        />\n    )\n}\n\nexport const renderCreateCurrencyOption = (\n    query: string,\n    active: boolean,\n    handleClick: React.MouseEventHandler<HTMLElement>,\n) => (\n    <MenuItem\n        icon=\"add\"\n        text={`Create \"${query}\"`}\n        active={active}\n        onClick={handleClick}\n        shouldDismissPopover={false}\n    />\n);\n\nexport const filterCurrency: ItemPredicate<ICurrency> = (query, currency, _index, exactMatch) => {\n    const normalizedTitle = currency.currency_code.toLowerCase();\n    const normalizedQuery = query.toLowerCase();\n\n    if (exactMatch) {\n        return normalizedTitle === normalizedQuery;\n    } else {\n        return `${normalizedTitle} ${currency.exchange_rate}`.indexOf(normalizedQuery) >= 0;\n    }\n};\n\nfunction highlightText(text: string, query: string) {\n    let lastIndex = 0;\n    const words = query\n        .split(/\\s+/)\n        .filter(word => word.length > 0)\n        .map(escapeRegExpChars);\n    if (words.length === 0) {\n        return [text];\n    }\n    const regexp = new RegExp(words.join(\"|\"), \"gi\");\n    const tokens: React.ReactNode[] = [];\n    while (true) {\n        const match = regexp.exec(text);\n        if (!match) {\n            break;\n        }\n        const length = match[0].length;\n        const before = text.slice(lastIndex, regexp.lastIndex - length);\n        if (before.length > 0) {\n            tokens.push(before);\n        }\n        lastIndex = regexp.lastIndex;\n        tokens.push(<strong key={lastIndex}>{match[0]}</strong>);\n    }\n    const rest = text.slice(lastIndex);\n    if (rest.length > 0) {\n        tokens.push(rest);\n    }\n    return tokens;\n}\n\nfunction escapeRegExpChars(text: string) {\n    return text.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\n}\n\nexport const currencySelectProps = {\n    itemPredicate: filterCurrency,\n    itemRenderer: renderCurrency,\n    items: CURRENCIES,\n};\n\nexport function createCurrency(currency_code: string): ICurrency {\n    return {\n        currency_code,\n        exchange_rate: 1,\n    };\n}\n\nexport function areCurrencyEqual(currencyA: ICurrency, currencyB: ICurrency) {\n    // Compare only the codes (ignoring case) just for simplicity.\n    return currencyA.currency_code.toLowerCase() === currencyB.currency_code.toLowerCase();\n}\n\nexport function doesCurrencyEqualQuery(currency: ICurrency, query: string) {\n    return currency.currency_code.toLowerCase() === query.toLowerCase();\n}\n\nexport function arrayContainsCurrency(currencies: ICurrency[], currencyToFind: ICurrency): boolean {\n    return currencies.some((currency: ICurrency) => currency.currency_code === currencyToFind.currency_code);\n}\n\nexport function addCurrencyToArray(currencies: ICurrency[], currencyToAdd: ICurrency) {\n    return [...currencies, currencyToAdd];\n}\n\nexport function deleteCurrencyFromArray(currencies: ICurrency[], currencyToDelete: ICurrency) {\n    return currencies.filter(currency => currency !== currencyToDelete);\n}\n\nexport function maybeAddCreatedCurrencyToArrays(\n    items: ICurrency[],\n    createdItems: ICurrency[],\n    currency: ICurrency,\n): { createdItems: ICurrency[]; items: ICurrency[] } {\n    const isNewlyCreatedItem = !arrayContainsCurrency(items, currency);\n    return {\n        createdItems: isNewlyCreatedItem ? addCurrencyToArray(createdItems, currency) : createdItems,\n        // Add a created currency to `items` so that the currency can be deselected.\n        items: isNewlyCreatedItem ? addCurrencyToArray(items, currency) : items,\n    };\n}\n\nexport function maybeDeleteCreatedCurrencyFromArrays(\n    items: ICurrency[],\n    createdItems: ICurrency[],\n    currency: ICurrency,\n): { createdItems: ICurrency[]; items: ICurrency[] } {\n    const wasItemCreatedByUser = arrayContainsCurrency(createdItems, currency);\n\n    // Delete the item if the user manually created it.\n    return {\n        createdItems: wasItemCreatedByUser ? deleteCurrencyFromArray(createdItems, currency) : createdItems,\n        items: wasItemCreatedByUser ? deleteCurrencyFromArray(items, currency) : items,\n    };\n}"]},"metadata":{},"sourceType":"module"}