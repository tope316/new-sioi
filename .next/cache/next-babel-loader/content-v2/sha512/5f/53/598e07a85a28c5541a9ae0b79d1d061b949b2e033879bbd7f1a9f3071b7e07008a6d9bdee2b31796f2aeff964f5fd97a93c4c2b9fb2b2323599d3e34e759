{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"D:\\\\ReactJS\\\\new-sioi\\\\components\\\\CurrencySuggest.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Suggest } from \"@blueprintjs/select\";\nimport { MenuItem } from \"@blueprintjs/core\";\nimport \"@blueprintjs/select/lib/css/blueprint-select.css\";\nimport { areCurrencyEqual, createCurrency, currencySelectProps, maybeAddCreatedCurrencyToArrays, maybeDeleteCreatedCurrencyFromArrays, renderCreateCurrencyOption, CURRENCIES } from './misc/currency';\nimport { useState } from 'react';\nexport default function CurrencySuggest(props) {\n  _s();\n\n  var _useState = useState({\n    allowCreate: false,\n    closeOnSelect: true,\n    createdItems: [],\n    fill: true,\n    currency: CURRENCIES[0],\n    items: currencySelectProps.items,\n    minimal: false,\n    openOnKeyDown: false,\n    resetOnClose: false,\n    resetOnQuery: false,\n    resetOnSelect: false\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var CurrencySuggest = Suggest.ofType();\n\n  var renderInputValue = function renderInputValue(currency) {\n    return currency.currency_code;\n  };\n\n  var handleValueChange = function handleValueChange(currency) {\n    var _maybeDeleteCreatedCu = maybeDeleteCreatedCurrencyFromArrays(state.items, state.createdItems, state.currency),\n        createdItems = _maybeDeleteCreatedCu.createdItems,\n        items = _maybeDeleteCreatedCu.items;\n\n    var _maybeAddCreatedCurre = maybeAddCreatedCurrencyToArrays(items, createdItems, currency),\n        nextCreatedItems = _maybeAddCreatedCurre.createdItems,\n        nextItems = _maybeAddCreatedCurre.items;\n\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      currency: currency,\n      createdItems: nextCreatedItems,\n      items: nextItems\n    }));\n    props.onExchangerateChange(currency);\n  };\n\n  var allowCreate = state.allowCreate,\n      currency = state.currency,\n      minimal = state.minimal,\n      flags = _objectWithoutProperties(state, [\"allowCreate\", \"currency\", \"minimal\"]);\n\n  var maybeCreateNewItemFromQuery = allowCreate ? createCurrency : undefined;\n  var maybeCreateNewItemRenderer = allowCreate ? renderCreateCurrencyOption : null;\n  return /*#__PURE__*/_jsxDEV(CurrencySuggest, _objectSpread(_objectSpread(_objectSpread({}, currencySelectProps), flags), {}, {\n    createNewItemFromQuery: maybeCreateNewItemFromQuery,\n    createNewItemRenderer: maybeCreateNewItemRenderer,\n    inputValueRenderer: renderInputValue,\n    itemsEqual: areCurrencyEqual,\n    items: state.items,\n    noResults: /*#__PURE__*/_jsxDEV(MenuItem, {\n      disabled: true,\n      text: \"No results.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 18\n    }, this),\n    onItemSelect: handleValueChange,\n    popoverProps: {\n      minimal: minimal\n    }\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CurrencySuggest, \"NX63/7QDr+MDrC7qlHfuca4SQrs=\");\n\n_c = CurrencySuggest;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrencySuggest\");","map":{"version":3,"sources":["D:/ReactJS/new-sioi/components/CurrencySuggest.tsx"],"names":["Suggest","MenuItem","areCurrencyEqual","createCurrency","currencySelectProps","maybeAddCreatedCurrencyToArrays","maybeDeleteCreatedCurrencyFromArrays","renderCreateCurrencyOption","CURRENCIES","useState","CurrencySuggest","props","allowCreate","closeOnSelect","createdItems","fill","currency","items","minimal","openOnKeyDown","resetOnClose","resetOnQuery","resetOnSelect","state","setState","ofType","renderInputValue","currency_code","handleValueChange","nextCreatedItems","nextItems","onExchangerateChange","flags","maybeCreateNewItemFromQuery","undefined","maybeCreateNewItemRenderer"],"mappings":"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","sourcesContent":["import { Suggest } from \"@blueprintjs/select\"\nimport { MenuItem } from \"@blueprintjs/core\"\nimport \"@blueprintjs/select/lib/css/blueprint-select.css\"\nimport {\n  areCurrencyEqual,\n  createCurrency,\n  currencySelectProps,\n  ICurrency,\n  maybeAddCreatedCurrencyToArrays,\n  maybeDeleteCreatedCurrencyFromArrays,\n  renderCreateCurrencyOption,\n  CURRENCIES,\n} from './misc/currency'\nimport { useState } from 'react'\n\nexport default function CurrencySuggest(props) {\n\n\n  const [state, setState] = useState({\n    allowCreate: false,\n    closeOnSelect: true,\n    createdItems: [],\n    fill: true,\n    currency: CURRENCIES[0],\n    items: currencySelectProps.items,\n    minimal: false,\n    openOnKeyDown: false,\n    resetOnClose: false,\n    resetOnQuery: false,\n    resetOnSelect: false,\n  })\n\n  const CurrencySuggest = Suggest.ofType<ICurrency>()\n\n  const renderInputValue = (currency: ICurrency) => currency.currency_code\n\n  const handleValueChange = (currency: ICurrency) => {\n    const { createdItems, items } = maybeDeleteCreatedCurrencyFromArrays(\n      state.items,\n      state.createdItems,\n      state.currency,\n    )\n\n    const { createdItems: nextCreatedItems, items: nextItems } = maybeAddCreatedCurrencyToArrays(\n      items,\n      createdItems,\n      currency,\n    )\n    setState({\n      ...state,\n      currency,\n      createdItems: nextCreatedItems,\n      items: nextItems\n    })\n    props.onExchangerateChange(currency)\n  }\n\n\n  const { allowCreate, currency, minimal, ...flags } = state\n  const maybeCreateNewItemFromQuery = allowCreate ? createCurrency : undefined;\n  const maybeCreateNewItemRenderer = allowCreate ? renderCreateCurrencyOption : null;\n\n  return (\n    <CurrencySuggest\n      {...currencySelectProps}\n      {...flags}\n      createNewItemFromQuery={maybeCreateNewItemFromQuery}\n      createNewItemRenderer={maybeCreateNewItemRenderer}\n      inputValueRenderer={renderInputValue}\n      itemsEqual={areCurrencyEqual}\n      items={state.items}\n      noResults={<MenuItem disabled={true} text=\"No results.\" />}\n      onItemSelect={handleValueChange}\n      popoverProps={{ minimal }}\n    />\n  )\n}"]},"metadata":{},"sourceType":"module"}