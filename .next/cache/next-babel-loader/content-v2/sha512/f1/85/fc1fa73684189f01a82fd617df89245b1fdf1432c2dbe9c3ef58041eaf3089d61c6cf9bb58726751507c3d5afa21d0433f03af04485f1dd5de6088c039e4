{"ast":null,"code":"import useSWR from \"swr\";\nconst baseUrl = \"http://localhost:3000/api/v1/auth\";\nexport const useLogin = (usr, pwd, typ) => {\n  const url = baseUrl;\n\n  const fetcher = url => fetch(url, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username: usr,\n      password: pwd,\n      type: typ\n    })\n  }).then(res => res.json());\n\n  const {\n    data: response,\n    error\n  } = useSWR(url, fetcher);\n  if (response.data.token) console.log(response.data.token);\n  return {\n    response,\n    error\n  };\n};","map":{"version":3,"sources":["D:/ReactJS/new-sioi/core/useLogin.ts"],"names":["useSWR","baseUrl","useLogin","usr","pwd","typ","url","fetcher","fetch","method","headers","body","JSON","stringify","username","password","type","then","res","json","data","response","error","token","console","log"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,KAAnB;AAEA,MAAMC,OAAO,GAAG,mCAAhB;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,GAAD,EAAKC,GAAL,EAASC,GAAT,KAAiB;AACrC,QAAMC,GAAG,GAAGL,OAAZ;;AACA,QAAMM,OAAO,GAAGD,GAAG,IAAIE,KAAK,CAACF,GAAD,EAAM;AAC9BG,IAAAA,MAAM,EAAE,MADsB;AAE9BC,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,sBAAgB;AAFX,KAFqB;AAM9BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,MAAAA,QAAQ,EAAEX,GAAX;AAAgBY,MAAAA,QAAQ,EAAEX,GAA1B;AAA+BY,MAAAA,IAAI,EAAEX;AAArC,KAAf;AANwB,GAAN,CAAL,CAOpBY,IAPoB,CAOfC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPQ,CAAvB;;AAQA,QAAM;AAAEC,IAAAA,IAAI,EAAEC,QAAR;AAAkBC,IAAAA;AAAlB,MAA4BtB,MAAM,CAACM,GAAD,EAAMC,OAAN,CAAxC;AACA,MAAIc,QAAQ,CAACD,IAAT,CAAcG,KAAlB,EAAyBC,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACD,IAAT,CAAcG,KAA1B;AACzB,SAAO;AAAEF,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAP;AACH,CAbM","sourcesContent":["import useSWR from \"swr\"\n\nconst baseUrl = \"http://localhost:3000/api/v1/auth\"\n\nexport const useLogin = (usr,pwd,typ) => {\n    const url = baseUrl\n    const fetcher = url => fetch(url, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({username: usr, password: pwd, type: typ}),\n    }).then(res => res.json())\n    const { data: response, error } = useSWR(url, fetcher)\n    if (response.data.token) console.log(response.data.token)\n    return { response, error }\n}"]},"metadata":{},"sourceType":"module"}