{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar baseUrl = \"http://localhost:3000/api/v1/auth\";\nexport var useLogin = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(path, usr, pass) {\n    var url;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            url = baseUrl + path;\n            /*const rawResponse = await fetch(url, {\n                method: 'POST',\n                headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({username: usr, password: pass, type: 'OPERATOR'})\n            });\n            const { data: response } = await rawResponse.json();\n            return (response)*/\n\n            return _context.abrupt(\"return\", \"test\");\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function useLogin(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["D:/ReactJS/new-sioi/core/useLogin.ts"],"names":["baseUrl","useLogin","path","usr","pass","url"],"mappings":";;AAAA,IAAMA,OAAO,GAAG,mCAAhB;AAEA,OAAO,IAAMC,QAAQ;AAAA,sEAAG,iBAAOC,IAAP,EAAaC,GAAb,EAAkBC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,YAAAA,GADc,GACRL,OAAO,GAAGE,IADF;AAEpB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAXwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAARD,QAAQ;AAAA;AAAA;AAAA,GAAd","sourcesContent":["const baseUrl = \"http://localhost:3000/api/v1/auth\"\n\nexport const useLogin = async (path, usr, pass) => {\n    const url = baseUrl + path\n    /*const rawResponse = await fetch(url, {\n        method: 'POST',\n        headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({username: usr, password: pass, type: 'OPERATOR'})\n    });\n    const { data: response } = await rawResponse.json();\n    return (response)*/\n    return (`test`)\n}"]},"metadata":{},"sourceType":"module"}