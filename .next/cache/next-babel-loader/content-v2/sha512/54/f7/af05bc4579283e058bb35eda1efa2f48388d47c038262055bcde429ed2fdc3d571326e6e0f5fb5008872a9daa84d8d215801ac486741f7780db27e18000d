{"ast":null,"code":"import useSWR from \"swr\";\nconst baseUrl = \"http://localhost:3000/api/v1/auth\";\n\nconst fetcher = url => fetch(url, {\n  method: 'POST',\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    username: 'admin',\n    password: 'not4u2know',\n    type: 'OPERATOR'\n  })\n}).then(res => res.json());\n\nexport const useLogin = (usr, pwd, typ) => {\n  const url = baseUrl;\n  const {\n    data: response,\n    error\n  } = useSWR(url, fetcher); //console.log(response.data.token)\n\n  return {\n    response,\n    error\n  };\n};","map":{"version":3,"sources":["D:/ReactJS/new-sioi/core/useLogin.ts"],"names":["useSWR","baseUrl","fetcher","url","fetch","method","headers","body","JSON","stringify","username","password","type","then","res","json","useLogin","usr","pwd","typ","data","response","error"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,KAAnB;AAEA,MAAMC,OAAO,GAAG,mCAAhB;;AACA,MAAMC,OAAO,GAAGC,GAAG,IAAIC,KAAK,CAACD,GAAD,EAAM;AAC9BE,EAAAA,MAAM,EAAE,MADsB;AAE9BC,EAAAA,OAAO,EAAE;AACL,cAAU,kBADL;AAEL,oBAAgB;AAFX,GAFqB;AAM9BC,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,IAAAA,QAAQ,EAAE,OAAX;AAAoBC,IAAAA,QAAQ,EAAE,YAA9B;AAA4CC,IAAAA,IAAI,EAAE;AAAlD,GAAf;AANwB,CAAN,CAAL,CAOpBC,IAPoB,CAOfC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPQ,CAAvB;;AASA,OAAO,MAAMC,QAAQ,GAAG,CAACC,GAAD,EAAKC,GAAL,EAASC,GAAT,KAAiB;AACrC,QAAMhB,GAAG,GAAGF,OAAZ;AACA,QAAM;AAAEmB,IAAAA,IAAI,EAAEC,QAAR;AAAkBC,IAAAA;AAAlB,MAA4BtB,MAAM,CAACG,GAAD,EAAMD,OAAN,CAAxC,CAFqC,CAGrC;;AACA,SAAO;AAAEmB,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAP;AACH,CALM","sourcesContent":["import useSWR from \"swr\"\n\nconst baseUrl = \"http://localhost:3000/api/v1/auth\"\nconst fetcher = url => fetch(url, {\n    method: 'POST',\n    headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({username: 'admin', password: 'not4u2know', type: 'OPERATOR'}),\n}).then(res => res.json())\n\nexport const useLogin = (usr,pwd,typ) => {\n    const url = baseUrl\n    const { data: response, error } = useSWR(url, fetcher)\n    //console.log(response.data.token)\n    return { response, error }\n}"]},"metadata":{},"sourceType":"module"}