{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\ReactJS\\\\new-sioi\\\\components\\\\vendor\\\\list.tsx\",\n    _s = $RefreshSig$();\n\nimport { Card, Elevation } from \"@blueprintjs/core\";\nimport { useMemo, useState, useEffect } from 'react';\nimport styles from './Vendor.module.css';\nimport Table from \"./Table\";\nexport default function TableList(props) {\n  _s();\n\n  var _this = this;\n\n  var Spacer = function Spacer(props) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: props.height\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, _this);\n  };\n\n  var Static = function Static(props) {\n    var styleName = \"bp3-input bp3-intent-\".concat(props.intent);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        style: {\n          width: 100,\n          backgroundColor: 'transparent',\n          textAlign: \"end\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.itemTitle,\n          children: props.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.itemInfo,\n          children: props.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Spacer, {\n        height: props.spacer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, _this);\n  }; // Custom component to render Genres \n\n\n  var Genres = function Genres(_ref) {\n    var values = _ref.values;\n    // Loop through the array and create a badge-like component instead of a comma-separated string\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: values.map(function (genre, idx) {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"badge\",\n          children: genre\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, _this);\n      })\n    }, void 0, false);\n  };\n\n  var _useState = useState([]),\n      data = _useState[0],\n      setData = _useState[1];\n  /* \n      - Columns is a simple array right now, but it will contain some logic later on. It is recommended by react-table to memoize the columns data\n      - Here in this example, we have grouped our columns into two headers. react-table is flexible enough to create grouped table headers\n  */\n\n\n  var columns = useMemo(function () {\n    return [{\n      Header: \"Name\",\n      accessor: \"show.name\"\n    }, {\n      Header: \"Type\",\n      accessor: \"show.type\"\n    }, {\n      Header: \"Language\",\n      accessor: \"show.language\"\n    }, {\n      Header: \"Genre(s)\",\n      accessor: \"show.genres\",\n      // Cell method will provide the cell value; we pass it to render a custom component\n      Cell: function Cell(_ref2) {\n        var value = _ref2.cell.value;\n        return /*#__PURE__*/_jsxDEV(Genres, {\n          values: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 44\n        }, _this);\n      }\n    }, {\n      Header: \"Runtime\",\n      accessor: \"show.runtime\",\n      // Cell method will provide the value of the cell; we can create a custom element for the Cell        \n      Cell: function Cell(_ref3) {\n        var value = _ref3.cell.value;\n        var hour = Math.floor(value / 60);\n        var min = Math.floor(value % 60);\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [hour > 0 ? \"\".concat(hour, \" hr\").concat(hour > 1 ? \"s\" : \"\", \" \") : \"\", min > 0 ? \"\".concat(min, \" min\").concat(min > 1 ? \"s\" : \"\") : \"\"]\n        }, void 0, true);\n      }\n    }, {\n      Header: \"Status\",\n      accessor: \"show.status\"\n    }, {\n      Header: \"Actions\",\n      accessor: \"show.id\",\n      Cell: function Cell(_ref4) {\n        var value = _ref4.cell.value;\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"api/edit/id/\".concat(value),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, _this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"api/view/id/\".concat(value),\n            children: \"View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, _this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"api/delete/id/\".concat(value),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true);\n      }\n    }];\n  }, []);\n  useEffect(function () {\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('http://localhost:3000/api/v1/vendor/queryAll', {\n                method: 'GET',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json',\n                  'Authorization': 'Bearer ' + \"\".concat(props.token)\n                }\n              }).then(function (a) {\n                console.log(a.json()); //return a.json(); // call the json method on the response to get JSON\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-xl-12 col-lg-12 pb-xl-0 pb-lg-4 pb-md-4 pb-sm-4 pb-xs-4\",\n    style: {\n      backgroundColor: 'transparent'\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      interactive: false,\n      elevation: Elevation.FOUR,\n      className: \"col-auto w-100 h-100\",\n      style: {\n        paddingLeft: -10,\n        paddingBottom: 10,\n        borderWidth: 2,\n        borderColor: 'black',\n        borderRadius: 10,\n        backgroundColor: \"white\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row px-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col text-black text-left px-4\",\n          style: {\n            backgroundColor: 'transparent'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.title,\n              children: \"Vendor Master Screen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Spacer, {\n            height: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            columns: columns,\n            data: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Spacer, {\n            height: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TableList, \"iRi1d7f8s6L0fzuL/BnsscKCsSA=\");\n\n_c = TableList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableList\");","map":{"version":3,"sources":["D:/ReactJS/new-sioi/components/vendor/list.tsx"],"names":["Card","Elevation","useMemo","useState","useEffect","styles","Table","TableList","props","Spacer","height","Static","styleName","intent","width","backgroundColor","textAlign","itemTitle","label","itemInfo","text","spacer","Genres","values","map","genre","idx","data","setData","columns","Header","accessor","Cell","value","cell","hour","Math","floor","min","fetch","method","headers","token","then","a","console","log","json","FOUR","paddingLeft","paddingBottom","borderWidth","borderColor","borderRadius","title"],"mappings":";;;;;;;;AAAA,SAASA,IAAT,EAAeC,SAAf,QAAwD,mBAAxD;AACA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AAAA;;AAErC,MAAMC,MAAM,GAAG,SAATA,MAAS,CAACD,KAAD,EAAW;AACtB,wBACI;AAAK,MAAA,KAAK,EAAE;AAAEE,QAAAA,MAAM,EAAEF,KAAK,CAACE;AAAhB;AAAZ;AAAA;AAAA;AAAA;AAAA,aADJ;AAGH,GAJD;;AAMA,MAAMC,MAAM,GAAG,SAATA,MAAS,CAACH,KAAD,EAAW;AACtB,QAAMI,SAAS,kCAA2BJ,KAAK,CAACK,MAAjC,CAAf;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,EAAf;AAAkB,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,GAAT;AAAcC,UAAAA,eAAe,EAAE,aAA/B;AAA8CC,UAAAA,SAAS,EAAE;AAAzD,SAAzB;AAAA,+BACI;AAAM,UAAA,SAAS,EAAEX,MAAM,CAACY,SAAxB;AAAA,oBAAoCT,KAAK,CAACU;AAA1C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,eADJ,eAII;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACI;AAAM,UAAA,SAAS,EAAEb,MAAM,CAACc,QAAxB;AAAA,oBAAmCX,KAAK,CAACY;AAAzC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,eAJJ,eAOI,QAAC,MAAD;AAAQ,QAAA,MAAM,EAAEZ,KAAK,CAACa;AAAtB;AAAA;AAAA;AAAA;AAAA,eAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ;AAWH,GAbD,CARqC,CAuBrC;;;AACA,MAAMC,MAAM,GAAG,SAATA,MAAS,OAAgB;AAAA,QAAbC,MAAa,QAAbA,MAAa;AAC3B;AACA,wBACA;AAAA,gBACKA,MAAM,CAACC,GAAP,CAAW,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAC5B,4BACI;AAAgB,UAAA,SAAS,EAAC,OAA1B;AAAA,oBACCD;AADD,WAAWC,GAAX;AAAA;AAAA;AAAA;AAAA,iBADJ;AAKC,OANA;AADL,qBADA;AAWH,GAbD;;AAxBqC,kBAuCbvB,QAAQ,CAAC,EAAD,CAvCK;AAAA,MAuC9BwB,IAvC8B;AAAA,MAuCxBC,OAvCwB;AAyCrC;AACJ;AACA;AACA;;;AACI,MAAMC,OAAO,GAAG3B,OAAO,CACnB;AAAA,WAAM,CACN;AACI4B,MAAAA,MAAM,EAAE,MADZ;AAEIC,MAAAA,QAAQ,EAAE;AAFd,KADM,EAKN;AACID,MAAAA,MAAM,EAAE,MADZ;AAEIC,MAAAA,QAAQ,EAAE;AAFd,KALM,EASN;AACID,MAAAA,MAAM,EAAE,UADZ;AAEIC,MAAAA,QAAQ,EAAE;AAFd,KATM,EAaN;AACID,MAAAA,MAAM,EAAE,UADZ;AAEIC,MAAAA,QAAQ,EAAE,aAFd;AAGI;AACAC,MAAAA,IAAI,EAAE;AAAA,YAAWC,KAAX,SAAGC,IAAH,CAAWD,KAAX;AAAA,4BAAyB,QAAC,MAAD;AAAQ,UAAA,MAAM,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,iBAAzB;AAAA;AAJV,KAbM,EAmBN;AACIH,MAAAA,MAAM,EAAE,SADZ;AAEIC,MAAAA,QAAQ,EAAE,cAFd;AAGI;AACAC,MAAAA,IAAI,EAAE,qBAAyB;AAAA,YAAdC,KAAc,SAAtBC,IAAsB,CAAdD,KAAc;AAC/B,YAAME,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAK,GAAG,EAAnB,CAAb;AACA,YAAMK,GAAG,GAAGF,IAAI,CAACC,KAAL,CAAWJ,KAAK,GAAG,EAAnB,CAAZ;AACA,4BACI;AAAA,qBACCE,IAAI,GAAG,CAAP,aAAcA,IAAd,gBAAwBA,IAAI,GAAG,CAAP,GAAW,GAAX,GAAiB,EAAzC,SAAiD,EADlD,EAECG,GAAG,GAAG,CAAN,aAAaA,GAAb,iBAAuBA,GAAG,GAAG,CAAN,GAAU,GAAV,GAAgB,EAAvC,IAA8C,EAF/C;AAAA,wBADJ;AAMC;AAbL,KAnBM,EAkCN;AACIR,MAAAA,MAAM,EAAE,QADZ;AAEIC,MAAAA,QAAQ,EAAE;AAFd,KAlCM,EAsCN;AACID,MAAAA,MAAM,EAAE,SADZ;AAEIC,MAAAA,QAAQ,EAAE,SAFd;AAGIC,MAAAA,IAAI,EAAE,qBAAyB;AAAA,YAAdC,KAAc,SAAtBC,IAAsB,CAAdD,KAAc;AAC/B,4BACI;AAAA,kCACA;AAAG,YAAA,IAAI,wBAAiBA,KAAjB,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADA,2BAEA;AAAG,YAAA,IAAI,wBAAiBA,KAAjB,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFA,2BAGA;AAAG,YAAA,IAAI,0BAAmBA,KAAnB,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHA;AAAA,wBADJ;AAOC;AAXL,KAtCM,CAAN;AAAA,GADmB,EAqDnB,EArDmB,CAAvB;AAwDA7B,EAAAA,SAAS,CAAC,YAAM;AACZ,6DAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAGSmC,KAAK,CAAC,8CAAD,EAAiD;AACxDC,gBAAAA,MAAM,EAAE,KADgD;AAExDC,gBAAAA,OAAO,EAAE;AACL,4BAAU,kBADL;AAEL,kCAAgB,kBAFX;AAGL,mCAAiB,sBAAejC,KAAK,CAACkC,KAArB;AAHZ;AAF+C,eAAjD,CAAL,CAODC,IAPC,CAOI,UAAUC,CAAV,EAAa;AACjBC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,IAAF,EAAZ,EADiB,CAEnB;AACD,eAVG,CAHT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAmBH,GApBQ,EAoBN,EApBM,CAAT;AAsBA,sBACI;AAAK,IAAA,SAAS,EAAC,6DAAf;AAA6E,IAAA,KAAK,EAAE;AAAEhC,MAAAA,eAAe,EAAE;AAAnB,KAApF;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,WAAW,EAAE,KAAnB;AAA0B,MAAA,SAAS,EAAEd,SAAS,CAAC+C,IAA/C;AAAqD,MAAA,SAAS,EAAC,sBAA/D;AAAsF,MAAA,KAAK,EAAE;AAAEC,QAAAA,WAAW,EAAE,CAAC,EAAhB;AAAoBC,QAAAA,aAAa,EAAE,EAAnC;AAAuCC,QAAAA,WAAW,EAAE,CAApD;AAAuDC,QAAAA,WAAW,EAAE,OAApE;AAA6EC,QAAAA,YAAY,EAAE,EAA3F;AAA+FtC,QAAAA,eAAe,EAAE;AAAhH,OAA7F;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,+BAAf;AAA+C,UAAA,KAAK,EAAE;AAAEA,YAAAA,eAAe,EAAE;AAAnB,WAAtD;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,mCAAqB;AAAM,cAAA,SAAS,EAAEV,MAAM,CAACiD,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAArB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAGI,QAAC,MAAD;AAAQ,YAAA,MAAM,EAAE;AAAhB;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII,QAAC,KAAD;AAAO,YAAA,OAAO,EAAEzB,OAAhB;AAAyB,YAAA,IAAI,EAAEF;AAA/B;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI,QAAC,MAAD;AAAQ,YAAA,MAAM,EAAE;AAAhB;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GA3IuBpB,S;;KAAAA,S","sourcesContent":["import { Card, Elevation, Classes as CoreClasses } from \"@blueprintjs/core\"\nimport { useMemo, useState, useEffect } from 'react'\nimport styles from './Vendor.module.css'\nimport Table from \"./Table\";\n\nexport default function TableList(props) {\n\n    const Spacer = (props) => {\n        return (\n            <div style={{ height: props.height }} />\n        )\n    }\n\n    const Static = (props) => {\n        const styleName = `bp3-input bp3-intent-${props.intent}`\n        return (\n            <div className=\"row\">\n                <div className=\"\" style={{ width: 100, backgroundColor: 'transparent', textAlign: \"end\" }}>\n                    <span className={styles.itemTitle}>{props.label}</span>\n                </div>\n                <div className=\"col\">\n                    <span className={styles.itemInfo}>{props.text}</span>\n                </div>\n                <Spacer height={props.spacer} />\n            </div>\n        )\n    }\n\n    // Custom component to render Genres \n    const Genres = ({ values }) => {\n        // Loop through the array and create a badge-like component instead of a comma-separated string\n        return (\n        <>\n            {values.map((genre, idx) => {\n            return (\n                <span key={idx} className=\"badge\">\n                {genre}\n                </span>\n            );\n            })}\n        </>\n        );\n    };\n\n    const [data, setData] = useState([]);\n\n    /* \n        - Columns is a simple array right now, but it will contain some logic later on. It is recommended by react-table to memoize the columns data\n        - Here in this example, we have grouped our columns into two headers. react-table is flexible enough to create grouped table headers\n    */\n    const columns = useMemo(\n        () => [\n        {\n            Header: \"Name\",\n            accessor: \"show.name\"\n        },\n        {\n            Header: \"Type\",\n            accessor: \"show.type\"\n        },\n        {\n            Header: \"Language\",\n            accessor: \"show.language\"\n        },\n        {\n            Header: \"Genre(s)\",\n            accessor: \"show.genres\",\n            // Cell method will provide the cell value; we pass it to render a custom component\n            Cell: ({ cell: { value } }) => <Genres values={value} />\n        },\n        {\n            Header: \"Runtime\",\n            accessor: \"show.runtime\",\n            // Cell method will provide the value of the cell; we can create a custom element for the Cell        \n            Cell: ({ cell: { value } }) => {\n            const hour = Math.floor(value / 60);\n            const min = Math.floor(value % 60);\n            return (\n                <>\n                {hour > 0 ? `${hour} hr${hour > 1 ? \"s\" : \"\"} ` : \"\"}\n                {min > 0 ? `${min} min${min > 1 ? \"s\" : \"\"}` : \"\"}\n                </>\n            );\n            }\n        },\n        {\n            Header: \"Status\",\n            accessor: \"show.status\"\n        },\n        {\n            Header: \"Actions\",\n            accessor: \"show.id\",\n            Cell: ({ cell: { value } }) => {\n            return (\n                <>\n                <a href={`api/edit/id/${value}`}>Edit</a>&nbsp;&nbsp;\n                <a href={`api/view/id/${value}`}>View</a>&nbsp;&nbsp;\n                <a href={`api/delete/id/${value}`}>Delete</a>\n                </>\n            )\n            }\n        }\n        ],\n        []\n    );\n\n    useEffect(() => {\n        (async () => {\n            //const result = await axios('https://api.tvmaze.com/search/shows?q=snow');\n            //setData(result.data);\n            await fetch('http://localhost:3000/api/v1/vendor/queryAll', {\n                method: 'GET',\n                headers: { \n                    'Accept': 'application/json', \n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + `${props.token}`\n                },\n              }).then(function (a) {\n                  console.log(a.json())\n                //return a.json(); // call the json method on the response to get JSON\n              })\n              /*.then(function (json) {\n                  console.log(json)\n                  setData(json.data);\n              })*/\n        })();\n    }, []);\n\n    return (\n        <div className=\"col-xl-12 col-lg-12 pb-xl-0 pb-lg-4 pb-md-4 pb-sm-4 pb-xs-4\" style={{ backgroundColor: 'transparent' }}>\n            <Card interactive={false} elevation={Elevation.FOUR} className=\"col-auto w-100 h-100\" style={{ paddingLeft: -10, paddingBottom: 10, borderWidth: 2, borderColor: 'black', borderRadius: 10, backgroundColor: \"white\" }}>\n                <div className=\"row px-4\">\n                    <div className=\"col text-black text-left px-4\" style={{ backgroundColor: 'transparent' }} >\n                        <div className=\"row\"><span className={styles.title}>Vendor Master Screen</span></div>\n\n                        <Spacer height={20} />\n                        <Table columns={columns} data={data} />\n                        <Spacer height={20} />\n\n                    </div>\n                </div>\n            </Card>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}