{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\ReactJS\\\\new-sioi\\\\components\\\\FilmSuggest.tsx\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Suggest } from \"@blueprintjs/select\";\nimport { MenuItem } from \"@blueprintjs/core\";\nimport \"@blueprintjs/select/lib/css/blueprint-select.css\";\nimport { areFilmsEqual, createFilm, filmSelectProps, maybeAddCreatedFilmToArrays, maybeDeleteCreatedFilmFromArrays, renderCreateFilmOption, TOP_100_FILMS } from './misc/films';\nimport { useState } from 'react';\nexport default function FilmSuggest(props) {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    allowCreate: false,\n    closeOnSelect: true,\n    createdItems: [],\n    fill: true,\n    film: TOP_100_FILMS[0],\n    items: filmSelectProps.items,\n    minimal: false,\n    openOnKeyDown: false,\n    resetOnClose: false,\n    resetOnQuery: false,\n    resetOnSelect: false\n  });\n  const FilmSuggest = Suggest.ofType();\n\n  const renderInputValue = film => film.title;\n\n  const handleValueChange = film => {\n    const {\n      createdItems,\n      items\n    } = maybeDeleteCreatedFilmFromArrays(state.items, state.createdItems, state.film);\n    const {\n      createdItems: nextCreatedItems,\n      items: nextItems\n    } = maybeAddCreatedFilmToArrays(items, createdItems, film);\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      film,\n      createdItems: nextCreatedItems,\n      items: nextItems\n    }));\n  };\n\n  const {\n    allowCreate,\n    film,\n    minimal\n  } = state,\n        flags = _objectWithoutProperties(state, [\"allowCreate\", \"film\", \"minimal\"]);\n\n  const maybeCreateNewItemFromQuery = allowCreate ? createFilm : undefined;\n  const maybeCreateNewItemRenderer = allowCreate ? renderCreateFilmOption : null;\n  return /*#__PURE__*/_jsxDEV(FilmSuggest, _objectSpread(_objectSpread(_objectSpread({}, filmSelectProps), flags), {}, {\n    createNewItemFromQuery: maybeCreateNewItemFromQuery,\n    createNewItemRenderer: maybeCreateNewItemRenderer,\n    inputValueRenderer: renderInputValue,\n    itemsEqual: areFilmsEqual,\n    items: state.items,\n    noResults: /*#__PURE__*/_jsxDEV(MenuItem, {\n      disabled: true,\n      text: \"No results.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 18\n    }, this),\n    onItemSelect: handleValueChange,\n    popoverProps: {\n      minimal\n    }\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["D:/ReactJS/new-sioi/components/FilmSuggest.tsx"],"names":["Suggest","MenuItem","areFilmsEqual","createFilm","filmSelectProps","maybeAddCreatedFilmToArrays","maybeDeleteCreatedFilmFromArrays","renderCreateFilmOption","TOP_100_FILMS","useState","FilmSuggest","props","state","setState","allowCreate","closeOnSelect","createdItems","fill","film","items","minimal","openOnKeyDown","resetOnClose","resetOnQuery","resetOnSelect","ofType","renderInputValue","title","handleValueChange","nextCreatedItems","nextItems","flags","maybeCreateNewItemFromQuery","undefined","maybeCreateNewItemRenderer"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,OAAT,QAAwB,qBAAxB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,OAAO,kDAAP;AACA,SACEC,aADF,EAEEC,UAFF,EAGEC,eAHF,EAKEC,2BALF,EAMEC,gCANF,EAOEC,sBAPF,EAQEC,aARF,QASO,cATP;AAUA,SAASC,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAGzC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBJ,QAAQ,CAAC;AACjCK,IAAAA,WAAW,EAAE,KADoB;AAEjCC,IAAAA,aAAa,EAAE,IAFkB;AAGjCC,IAAAA,YAAY,EAAE,EAHmB;AAIjCC,IAAAA,IAAI,EAAE,IAJ2B;AAKjCC,IAAAA,IAAI,EAAEV,aAAa,CAAC,CAAD,CALc;AAMjCW,IAAAA,KAAK,EAAEf,eAAe,CAACe,KANU;AAOjCC,IAAAA,OAAO,EAAE,KAPwB;AAQjCC,IAAAA,aAAa,EAAE,KARkB;AASjCC,IAAAA,YAAY,EAAE,KATmB;AAUjCC,IAAAA,YAAY,EAAE,KAVmB;AAWjCC,IAAAA,aAAa,EAAE;AAXkB,GAAD,CAAlC;AAcA,QAAMd,WAAW,GAAGV,OAAO,CAACyB,MAAR,EAApB;;AAEA,QAAMC,gBAAgB,GAAIR,IAAD,IAAiBA,IAAI,CAACS,KAA/C;;AAEA,QAAMC,iBAAiB,GAAIV,IAAD,IAAiB;AACzC,UAAM;AAAEF,MAAAA,YAAF;AAAgBG,MAAAA;AAAhB,QAA0Bb,gCAAgC,CAC9DM,KAAK,CAACO,KADwD,EAE9DP,KAAK,CAACI,YAFwD,EAG9DJ,KAAK,CAACM,IAHwD,CAAhE;AAMA,UAAM;AAAEF,MAAAA,YAAY,EAAEa,gBAAhB;AAAkCV,MAAAA,KAAK,EAAEW;AAAzC,QAAuDzB,2BAA2B,CACtFc,KADsF,EAEtFH,YAFsF,EAGtFE,IAHsF,CAAxF;AAKAL,IAAAA,QAAQ,iCACHD,KADG;AAENM,MAAAA,IAFM;AAGNF,MAAAA,YAAY,EAAEa,gBAHR;AAINV,MAAAA,KAAK,EAAEW;AAJD,OAAR;AAMD,GAlBD;;AAqBA,QAAM;AAAEhB,IAAAA,WAAF;AAAeI,IAAAA,IAAf;AAAqBE,IAAAA;AAArB,MAA2CR,KAAjD;AAAA,QAAuCmB,KAAvC,4BAAiDnB,KAAjD;;AACA,QAAMoB,2BAA2B,GAAGlB,WAAW,GAAGX,UAAH,GAAgB8B,SAA/D;AACA,QAAMC,0BAA0B,GAAGpB,WAAW,GAAGP,sBAAH,GAA4B,IAA1E;AAEA,sBACE,QAAC,WAAD,gDACMH,eADN,GAEM2B,KAFN;AAGE,IAAA,sBAAsB,EAAEC,2BAH1B;AAIE,IAAA,qBAAqB,EAAEE,0BAJzB;AAKE,IAAA,kBAAkB,EAAER,gBALtB;AAME,IAAA,UAAU,EAAExB,aANd;AAOE,IAAA,KAAK,EAAEU,KAAK,CAACO,KAPf;AAQE,IAAA,SAAS,eAAE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,IAApB;AAA0B,MAAA,IAAI,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,YARb;AASE,IAAA,YAAY,EAAES,iBAThB;AAUE,IAAA,YAAY,EAAE;AAAER,MAAAA;AAAF;AAVhB;AAAA;AAAA;AAAA;AAAA,UADF;AAcD","sourcesContent":["import { Suggest } from \"@blueprintjs/select\"\nimport { MenuItem } from \"@blueprintjs/core\"\nimport \"@blueprintjs/select/lib/css/blueprint-select.css\"\nimport {\n  areFilmsEqual,\n  createFilm,\n  filmSelectProps,\n  IFilm,\n  maybeAddCreatedFilmToArrays,\n  maybeDeleteCreatedFilmFromArrays,\n  renderCreateFilmOption,\n  TOP_100_FILMS,\n} from './misc/films'\nimport { useState } from 'react'\n\nexport default function FilmSuggest(props) {\n\n\n  const [state, setState] = useState({\n    allowCreate: false,\n    closeOnSelect: true,\n    createdItems: [],\n    fill: true,\n    film: TOP_100_FILMS[0],\n    items: filmSelectProps.items,\n    minimal: false,\n    openOnKeyDown: false,\n    resetOnClose: false,\n    resetOnQuery: false,\n    resetOnSelect: false,\n  })\n\n  const FilmSuggest = Suggest.ofType<IFilm>()\n\n  const renderInputValue = (film: IFilm) => film.title\n\n  const handleValueChange = (film: IFilm) => {\n    const { createdItems, items } = maybeDeleteCreatedFilmFromArrays(\n      state.items,\n      state.createdItems,\n      state.film,\n    )\n\n    const { createdItems: nextCreatedItems, items: nextItems } = maybeAddCreatedFilmToArrays(\n      items,\n      createdItems,\n      film,\n    )\n    setState({\n      ...state,\n      film,\n      createdItems: nextCreatedItems,\n      items: nextItems\n    })\n  }\n\n\n  const { allowCreate, film, minimal, ...flags } = state\n  const maybeCreateNewItemFromQuery = allowCreate ? createFilm : undefined;\n  const maybeCreateNewItemRenderer = allowCreate ? renderCreateFilmOption : null;\n\n  return (\n    <FilmSuggest\n      {...filmSelectProps}\n      {...flags}\n      createNewItemFromQuery={maybeCreateNewItemFromQuery}\n      createNewItemRenderer={maybeCreateNewItemRenderer}\n      inputValueRenderer={renderInputValue}\n      itemsEqual={areFilmsEqual}\n      items={state.items}\n      noResults={<MenuItem disabled={true} text=\"No results.\" />}\n      onItemSelect={handleValueChange}\n      popoverProps={{ minimal }}\n    />\n  )\n}"]},"metadata":{},"sourceType":"module"}