{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\ReactJS\\\\new-sioi\\\\components\\\\vendor\\\\list.tsx\";\nimport { Card, Elevation } from \"@blueprintjs/core\";\nimport { Cell, Column, Table, TableLoadingOption, SelectionModes } from \"@blueprintjs/table\";\nimport { useState } from 'react';\nimport styles from './Vendor.module.css';\nimport \"@blueprintjs/popover2/lib/css/blueprint-popover2.css\";\nimport \"@blueprintjs/table/lib/css/table.css\";\nimport 'react-day-picker/lib/style.css';\nimport { useLogin } from '../../core/useLogin';\nexport default function TableList(props) {\n  const Spacer = props => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: props.height\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this);\n  };\n\n  const Static = props => {\n    const styleName = `bp3-input bp3-intent-${props.intent}`;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        style: {\n          width: 100,\n          backgroundColor: 'transparent',\n          textAlign: \"end\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.itemTitle,\n          children: props.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.itemInfo,\n          children: props.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Spacer, {\n        height: props.spacer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  };\n\n  const vendorData = require(\"../../data/quotation.json\");\n\n  const {\n    0: skeleton,\n    1: setSkeleton\n  } = useState();\n\n  const getLoadingOptions = () => {\n    let loadingOptions = [];\n    if (skeleton) loadingOptions = [TableLoadingOption.CELLS, TableLoadingOption.COLUMN_HEADERS, TableLoadingOption.ROW_HEADERS];\n    return loadingOptions;\n  };\n\n  const formatColumnName = columnName => {\n    return columnName.replace(/([A-Z])/g, \" $1\").replace(/^./, firstCharacter => firstCharacter.toUpperCase());\n  };\n\n  const renderCell = (rowIndex, columnIndex) => {\n    const vendorRecord = vendorData[rowIndex];\n    return /*#__PURE__*/_jsxDEV(Cell, {\n      children: vendorRecord[Object.keys(vendorRecord)[columnIndex]]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 16\n    }, this);\n  };\n\n  const DataGrid = props => {\n    const columns = Object.keys(vendorData[0]).map((columnName, index) => /*#__PURE__*/_jsxDEV(Column, {\n      name: formatColumnName(columnName),\n      cellRenderer: renderCell\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this));\n\n    const cellRenderer = rowIndex => {\n      return /*#__PURE__*/_jsxDEV(Cell, {\n        children: `$${(rowIndex * 10).toFixed(2)}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 20\n      }, this);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        style: {\n          width: 100\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: \"w-100\",\n          numRows: vendorData.length,\n          loadingOptions: getLoadingOptions(),\n          selectionModes: SelectionModes.ALL,\n          children: columns\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  };\n\n  const LoginData = props => {\n    const {\n      response,\n      error\n    } = useLogin(\"?username=admin&password=not4u2know&type=OPERATOR\");\n    if (!response) console.log(`{error}`); //return (error)\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Token: \", response === null || response === void 0 ? void 0 : response.data.map(user => user.token)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-xl-12 col-lg-12 pb-xl-0 pb-lg-4 pb-md-4 pb-sm-4 pb-xs-4\",\n    style: {\n      backgroundColor: 'transparent'\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      interactive: false,\n      elevation: Elevation.FOUR,\n      className: \"col-auto w-100 h-100\",\n      style: {\n        paddingLeft: -10,\n        paddingBottom: 10,\n        borderWidth: 2,\n        borderColor: 'black',\n        borderRadius: 10,\n        backgroundColor: \"white\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row px-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col text-black text-left px-4\",\n          style: {\n            backgroundColor: 'transparent'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.title,\n              children: \"Vendor Master Screen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(LoginData, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Spacer, {\n            height: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DataGrid, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Spacer, {\n            height: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["D:/ReactJS/new-sioi/components/vendor/list.tsx"],"names":["Card","Elevation","Cell","Column","Table","TableLoadingOption","SelectionModes","useState","styles","useLogin","TableList","props","Spacer","height","Static","styleName","intent","width","backgroundColor","textAlign","itemTitle","label","itemInfo","text","spacer","vendorData","require","skeleton","setSkeleton","getLoadingOptions","loadingOptions","CELLS","COLUMN_HEADERS","ROW_HEADERS","formatColumnName","columnName","replace","firstCharacter","toUpperCase","renderCell","rowIndex","columnIndex","vendorRecord","Object","keys","DataGrid","columns","map","index","cellRenderer","toFixed","length","ALL","LoginData","response","error","console","log","data","user","token","FOUR","paddingLeft","paddingBottom","borderWidth","borderColor","borderRadius","title"],"mappings":"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","sourcesContent":["import { Card, Elevation, Classes as CoreClasses } from \"@blueprintjs/core\"\nimport { Cell, Column, Table, TableLoadingOption, SelectionModes } from \"@blueprintjs/table\"\nimport { useState } from 'react'\nimport styles from './Vendor.module.css'\nimport \"@blueprintjs/popover2/lib/css/blueprint-popover2.css\"\nimport \"@blueprintjs/table/lib/css/table.css\"\nimport 'react-day-picker/lib/style.css';\nimport { useLogin } from '../../core/useLogin'\n\nexport default function TableList(props) {\n\n    const Spacer = (props) => {\n        return (\n            <div style={{ height: props.height }} />\n        )\n    }\n\n    const Static = (props) => {\n        const styleName = `bp3-input bp3-intent-${props.intent}`\n        return (\n            <div className=\"row\">\n                <div className=\"\" style={{ width: 100, backgroundColor: 'transparent', textAlign: \"end\" }}>\n                    <span className={styles.itemTitle}>{props.label}</span>\n                </div>\n                <div className=\"col\">\n                    <span className={styles.itemInfo}>{props.text}</span>\n                </div>\n                <Spacer height={props.spacer} />\n            </div>\n        )\n    }\n\n    interface IVendorData {\n        [key: string]: number | string;\n    }\n\n    const vendorData: IVendorData[] = require(\"../../data/quotation.json\")\n\n    const [skeleton, setSkeleton] = useState()\n\n    const getLoadingOptions = () => {\n        let loadingOptions: TableLoadingOption[] = []\n        if (skeleton) loadingOptions = [TableLoadingOption.CELLS, TableLoadingOption.COLUMN_HEADERS, TableLoadingOption.ROW_HEADERS]\n        return loadingOptions\n    }\n\n    const formatColumnName = (columnName: string) => {\n        return columnName.replace(/([A-Z])/g, \" $1\").replace(/^./, firstCharacter => firstCharacter.toUpperCase())\n    }\n\n    const renderCell = (rowIndex: number, columnIndex: number) => {\n        const vendorRecord = vendorData[rowIndex]\n        return <Cell>{vendorRecord[Object.keys(vendorRecord)[columnIndex]]}</Cell>\n    }\n\n    const DataGrid = (props) => {\n\n        const columns = Object.keys(vendorData[0]).map((columnName, index) => (\n            <Column key={index} name={formatColumnName(columnName)} cellRenderer={renderCell} />\n        ))\n\n        const cellRenderer = (rowIndex: number) => {\n            return <Cell>{`$${(rowIndex * 10).toFixed(2)}`}</Cell>\n        }\n\n        return (\n            <div className=\"row\">\n                <div className=\"col\" style={{ width: 100 }}>\n                    <Table className=\"w-100\" numRows={vendorData.length} loadingOptions={getLoadingOptions()} selectionModes={SelectionModes.ALL}>\n                        {columns}\n                        {/*}\n                       <Column key={1} name=\"Item\" cellRenderer={renderCell} className=\"\" />\n                       <Column key={2} name=\"Description\" cellRenderer={renderCell} className=\"\" />\n                       <Column key={3} name=\"Specification\" cellRenderer={renderCell} className=\"\" />\n                       <Column key={4} name=\"ETD\" cellRenderer={renderCell} className=\"\" /> */}\n                    </Table>\n                </div>\n            </div>\n        )\n    }\n\n    const LoginData = (props) => {\n        const { response, error } = useLogin(\"?username=admin&password=not4u2know&type=OPERATOR\")\n        if (!response) console.log(`{error}`)//return (error)\n        return (\n            <div>Token: {response?.data.map((user) => ( user.token ))}</div>\n        )\n    }\n\n    return (\n        <div className=\"col-xl-12 col-lg-12 pb-xl-0 pb-lg-4 pb-md-4 pb-sm-4 pb-xs-4\" style={{ backgroundColor: 'transparent' }}>\n            <Card interactive={false} elevation={Elevation.FOUR} className=\"col-auto w-100 h-100\" style={{ paddingLeft: -10, paddingBottom: 10, borderWidth: 2, borderColor: 'black', borderRadius: 10, backgroundColor: \"white\" }}>\n                <div className=\"row px-4\">\n                    <div className=\"col text-black text-left px-4\" style={{ backgroundColor: 'transparent' }} >\n                        <div className=\"row\"><span className={styles.title}>Vendor Master Screen</span></div>\n\n                        <LoginData />\n\n                        <Spacer height={20} />\n                        <DataGrid />\n                        <Spacer height={20} />\n\n                    </div>\n                </div>\n            </Card>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}